name: Build Luna Nodes

on:
  pull_request:
    types: [closed]

jobs:
  build-x86:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [gui, servo, flight]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup environment for ${{ matrix.node }}
        run: |
          if [ "${{ matrix.node }}" = "gui" ]; then
            curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
            sudo apt-get install -y nodejs
          else
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source $HOME/.cargo/env
          fi

      - name: Build ${{ matrix.node }}
        run: |
          cd ${{ matrix.node }}
          if [ "${{ matrix.node }}" = "gui" ]; then
            npm install
            npm run tauri build
          else
            cargo build --release
          fi

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.node }}-x86_64
          path: ${{ matrix.node }}/target/release/*

  build-armv7:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [sam]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build ${{ matrix.node }} for ARMv7
        run: |
          docker run --rm \
            --platform linux/arm/v7 \
            -v $(pwd):/workspace \
            -w /workspace/${{ matrix.node }} \
            arm32v7/ubuntu:latest \
            /bin/bash -c "apt-get update && \
                          apt-get install -y build-essential gcc-arm-linux-gnueabihf curl && \
                          curl https://sh.rustup.rs -sSf | sh -s -- -y && \
                          source $HOME/.cargo/env && \
                          rustup target add armv7-unknown-linux-gnueabihf && \
                          cargo build --target armv7-unknown-linux-gnueabihf --release"

      - name: Upload ARMv7 binaries
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.node }}-armv7
          path: ${{ matrix.node }}/target/armv7-unknown-linux-gnueabihf/release/*
